<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ECommon.Autofac</name>
    </assembly>
    <members>
        <member name="T:ECommon.Autofac.AutofacObjectContainer">
            <summary>Autofac implementation of IObjectContainer.
            </summary>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.#ctor">
            <summary>Default constructor.
            </summary>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.#ctor(Autofac.ContainerBuilder)">
            <summary>Parameterized constructor.
            </summary>
            <param name="containerBuilder"></param>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.RegisterType(System.Type,ECommon.Components.LifeStyle)">
            <summary>Register a implementation type.
            </summary>
            <param name="implementationType">The implementation type.</param>
            <param name="life">The life cycle of the implementer type.</param>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.RegisterType(System.Type,System.Type,ECommon.Components.LifeStyle)">
            <summary>Register a implementer type as a service implementation.
            </summary>
            <param name="serviceType">The service type.</param>
            <param name="implementationType">The implementation type.</param>
            <param name="life">The life cycle of the implementer type.</param>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.Register``2(ECommon.Components.LifeStyle)">
            <summary>Register a implementer type as a service implementation.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <typeparam name="TImplementer">The implementer type.</typeparam>
            <param name="life">The life cycle of the implementer type.</param>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.RegisterInstance``2(``1)">
            <summary>Register a implementer type instance as a service implementation.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <typeparam name="TImplementer">The implementer type.</typeparam>
            <param name="instance">The implementer type instance.</param>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.Resolve``1">
            <summary>Resolve a service.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <returns>The component instance that provides the service.</returns>
        </member>
        <member name="M:ECommon.Autofac.AutofacObjectContainer.Resolve(System.Type)">
            <summary>Resolve a service.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>The component instance that provides the service.</returns>
        </member>
        <member name="P:ECommon.Autofac.AutofacObjectContainer.Container">
            <summary>Represents the inner autofac container.
            </summary>
        </member>
        <member name="T:ECommon.Autofac.ConfigurationExtensions">
            <summary>ENode configuration class Autofac extensions.
            </summary>
        </member>
        <member name="M:ECommon.Autofac.ConfigurationExtensions.UseAutofac(ECommon.Configurations.Configuration)">
            <summary>Use Autofac as the object container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECommon.Autofac.ConfigurationExtensions.UseAutofac(ECommon.Configurations.Configuration,Autofac.ContainerBuilder)">
            <summary>Use Autofac as the object container.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
